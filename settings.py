"""
Django settings for djangoProject project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-fs$v!4!s_wgllcd5u!$c@uo*l0$jni90__c!i0az-$p2fvlggh'
#
# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
#
# ALLOWED_HOSTS = []

# SECRET_KEY：從環境變數抓，如果沒有就使用預設值（本地開發用）
SECRET_KEY = os.environ.get(
    'SECRET_KEY',
    'django-insecure-fs$v!4!s_wgllcd5u!$c@uo*l0$jni90__c!i0az-$p2fvlggh'
)


# 透過 NGROK 開 server

DEBUG = os.environ.get('DEBUG', 'True') == 'True'

ALLOWED_HOSTS = os.environ.get(
    'ALLOWED_HOSTS',
    '127.0.0.1,localhost'
).split(',')

NGROK_HOST = os.environ.get('NGROK_HOST')

CSRF_TRUSTED_ORIGINS = ['http://localhost:8000']
if NGROK_HOST:
    CSRF_TRUSTED_ORIGINS.append(f'https://{NGROK_HOST}')

# 本地端直接開 server # 目前無法使用，學校網路安全問題
# DEBUG = False
#
# ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '140.114.53.234']
#
# CSRF_TRUSTED_ORIGINS = [
#     'http://localhost:8000',
#     'http://127.0.0.1:8000',
#     'http://140.114.53.234:8000',
# ]






# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'members.apps.MembersConfig',
    'Arcadyan_Web',
    'debug_toolbar',
    'crispy_forms',
    'django_db_logger',
    'system.apps.SystemConfig',
    'django.contrib.humanize',
]

CRISPY_TEMPLATE_PACK = 'bootstrap3'

SESSION_COOKIE_AGE = 60 * 1000  # 30 minutes

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]

ROOT_URLCONF = 'djangoProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates').replace('\\', '/')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'Arcadyan_Web.context_processor.sidebar_permissions',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangoProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'mssql',
        'NAME': 'Arcadyan_DB',
        'USER': 'Arcadyan_Admin',
        'PASSWORD': 'Arcadyan725908',
        'HOST': '140.114.53.220',
        'PORT': '1433',
        "OPTIONS": {"driver": "ODBC Driver 17 for SQL Server",
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'zh-Hant'

TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_TZ = False

USE_L10N = True
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]


# Logging Setting

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'my-formatter': {
            '()': 'django.utils.log.ServerFormatter',
            'format': u"[%(asctime)s.%(msecs)d] [%(levelname)s] (%(module)s.%(funcName)s) %(message)s",
            'datefmt': "%Y-%m-%d %H:%M:%S"
        },
        'my-formatter2': {
            '()': 'django.utils.log.ServerFormatter',
            'format': u"[%(asctime)s.%(msecs)d] [%(levelname)s] [%(custom_contextual_data)s] (%(module)s.%(funcName)s) %(message)s",
            'datefmt': "%Y-%m-%d %H:%M:%S"
        },
    },
    'handlers': {
        # 紀錄在資料庫端的 log 形式
        'db_log':{
            'level': 'DEBUG',
            'class': 'django_db_logger.db_log_handler.DatabaseLogHandler',
            'formatter': 'my-formatter'
        },
        # 呈現在 console 端的 log 形式
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'my-formatter'
        },
        # 呈現在 console 端的 log 形式
        'test': {
            'level': 'INFO',
            'class': 'system.handlers.CustomDatabaseLogHandler',
            'formatter': 'my-formatter2'
        },
    },
    'loggers': {
        'db':{
            'handlers': ['db_log'],
            'level': 'DEBUG',
        },
        'base-logger': {
            'handlers': ['db_log', 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'user_action_log': {
            'handlers': ['db_log', 'test', 'console'],
            'level': 'DEBUG',
            'propagate': True,

        },
    },
}

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = '/account/login/'

DATA_UPLOAD_MAX_NUMBER_FIELDS = 5000
